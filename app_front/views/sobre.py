# app_front/views/sobre.py
import streamlit as st
from pathlib import Path

# r√≥tulos com √≠cones
TAB_LABELS = ["üß≠ Metodologia", "üìö Gloss√°rio", "‚ùì FAQ"]

def _sec_metodologia():
    import pandas as pd

    st.subheader("üì∂ FinScore")

    # caminho robusto para os assets (independente de onde o app √© executado)
    ASSETS_PATH = Path(__file__).resolve().parents[1] / "assets"

    # 1) O que √© o FinScore (texto executivo, impessoal)
    st.markdown("""
    O **FinScore** transforma as demonstra√ß√µes cont√°beis da empresa em um **n√∫mero √∫nico (0‚Äì1000)**
    que resume sua sa√∫de econ√¥mico-financeira e risco de cr√©dito. O c√°lculo combina informa√ß√µes de at√©
    **tr√™s exerc√≠cios** e entrega um resultado compar√°vel entre empresas e ao longo do tempo.
    """)

    # 2) Metodologia (texto descritivo com termos t√©cnicos explicados)
    st.markdown("#### üìï Metodologia")
    st.markdown("""
    A constru√ß√£o do FinScore ocorre em tr√™s blocos integrados:

    **a) √çndices cont√°beis.** S√£o extra√≠dos indicadores que cobrem quatro dimens√µes: **liquidez**
    (capacidade de honrar compromissos de curto prazo), **rentabilidade** (efici√™ncia em gerar lucro),
    **endividamento/alavancagem** (grau de depend√™ncia de capital de terceiros e folga para servi√ßo da d√≠vida)
    e **efici√™ncia operacional** (ritmo do ciclo financeiro e uso de ativos para gerar receita).
    Esses √≠ndices n√£o s√£o lidos de forma isolada; o interesse √© o **conjunto**, pois combina√ß√µes espec√≠ficas
    revelam for√ßas e fragilidades.

    **b) T√©cnicas estat√≠sticas.** Para compara√ß√£o equilibrada, os √≠ndices passam por **padroniza√ß√£o (z-score)**,
    que os coloca em uma escala comum (m√©dia zero, desvio-padr√£o um), evitando que um indicador pese mais apenas
    por ter valores naturalmente maiores. Em seguida, emprega-se **PCA (An√°lise de Componentes Principais)**,
    que organiza informa√ß√µes correlacionadas em poucos **fatores independentes**. Duas no√ß√µes guiam a leitura:
    **cargas (loadings)**, que indicam a contribui√ß√£o de cada √≠ndice em um fator, e **vari√¢ncia explicada**,
    que mostra quanto do comportamento total aquele fator representa. Na pr√°tica, a PCA reduz complexidade e
    destaca **quais √≠ndices realmente dirigem** o resultado em cada caso.

    **c) Pondera√ß√£o temporal.** Para refletir a situa√ß√£o atual sem perder contexto, os escores anuais s√£o
    combinados com pesos **60% (t)**, **25% (t‚àí1)** e **15% (t‚àí2)**. O efeito √© valorizar o desempenho recente,
    preservando tend√™ncia e reduzindo a influ√™ncia de anos at√≠picos.
    """)

    # Fluxograma do c√°lculo
    fluxograma = ASSETS_PATH / "finscore_pipeline.png"
    if fluxograma.exists():
        st.image(str(fluxograma), use_column_width=True)
    else:
        st.info("Fluxograma n√£o encontrado em assets. Esperado: `finscore_pipeline.png`.")

    # 3) √çndices considerados (tabela)
    st.markdown("#### √çndices utilizados")
    tabela_csv = ASSETS_PATH / "finscore_indices_formulas.csv"
    if tabela_csv.exists():
        df = pd.read_csv(tabela_csv)
        st.table(df)
        st.download_button(
            "Baixar tabela de √≠ndices (CSV)",
            data=tabela_csv.read_bytes(),
            file_name="finscore_indices_formulas.csv",
            mime="text/csv",
        )
    else:
        st.info("Tabela de √≠ndices n√£o encontrada em assets. Esperado: `finscore_indices_formulas.csv`.")

    # 4) Pondera√ß√£o temporal (texto + imagem)
    st.markdown("#### Pondera√ß√£o temporal")
    st.markdown("""
    O FinScore utiliza at√© tr√™s exerc√≠cios consecutivos para equilibrar **rec√™ncia** e **consist√™ncia hist√≥rica**.
    A distribui√ß√£o de pesos √© **60%** para o ano mais recente, **25%** para o ano anterior e **15%** para o ano anterior a esse.
    """)
    pesos_img = ASSETS_PATH / "finscore_pesos_temporais.png"
    if pesos_img.exists():
        st.image(str(pesos_img), use_column_width=False)
        st.caption("Ano t: 60% ¬∑ Ano t‚àí1: 25% ¬∑ Ano t‚àí2: 15%")
    else:
        st.info("Gr√°fico de pesos n√£o encontrado em assets. Esperado: `finscore_pesos_temporais.png`.")

    # 5) Faixas de risco (texto + imagem)
    st.markdown("#### Faixas de risco (FinScore 0‚Äì1000)")
    st.markdown("""
    O escore final √© convertido para a escala **0‚Äì1000** e classificado em faixas de risco predefinidas,
    facilitando a comunica√ß√£o para decis√£o de cr√©dito.
    """)
    faixas_img = ASSETS_PATH / "finscore_faixas_risco.png"
    if faixas_img.exists():
        st.image(str(faixas_img), use_column_width=True)
    else:
        st.info("Gr√°fico de faixas n√£o encontrado em assets. Esperado: `finscore_faixas_risco.png`.")

def _sec_glossario():
    st.subheader("Gloss√°rio")
    st.write("Esta √© a p√°gina de gloss√°rio.")
    # TODO: conte√∫do do gloss√°rio

def _sec_faq():
    st.subheader("FAQ")
    st.write("Esta √© a p√°gina de FAQ.")
    # TODO: perguntas e respostas

def render():
    # --- CSS desta view: CENTRALIZAR A BARRA DE ABAS ---
    st.markdown(
        """
        <style>
        /* Centraliza o container das abas nesta p√°gina */
        div[data-testid="stTabs"] > div[role="tablist"],
        div[data-baseweb="tab-list"]{
            display:flex;
            justify-content:center;
        }
        /* Mant√©m largura natural dos bot√µes de aba */
        div[data-testid="stTabs"] button[role="tab"],
        div[data-baseweb="tab"]{
            flex: 0 0 auto;
        }
        </style>
        """,
        unsafe_allow_html=True,
    )

    # abas internas
    tab_met, tab_glos, tab_faq = st.tabs(TAB_LABELS)

    with tab_met:
        _sec_metodologia()

    with tab_glos:
        _sec_glossario()

    with tab_faq:
        _sec_faq()
